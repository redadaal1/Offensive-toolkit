http_exploit.py 

- **run_metasploit_exploit**: To execute a specific Metasploit Framework module against the target, automating the process of setting options (RHOSTS, RPORT, PAYLOAD) and launching the exploit to gain a shell.
- **test_sql_injection_with_sqlmap**: To use SQLMap to perform a deep-dive SQL injection attack on a specific URL and parameter, with the goal of enumerating databases and dumping data.
- **test_xss_with_payload**: To test for Cross-Site Scripting (XSS) by injecting a comprehensive list of payloads into a vulnerable parameter and analyzing the response to determine the risk level.
- **test_file_upload_and_shell**: To exploit a file upload vulnerability by attempting to upload a malicious web shell or reverse shell, aiming to achieve Remote Code Execution (RCE).
- **test_lfi_and_file_download**: To exploit a Local File Inclusion (LFI) vulnerability to read and download sensitive system files from the server.
- **test_rce_and_proof**: To exploit an RCE vulnerability by injecting system commands and capturing the output to prove that arbitrary code can be run on the server.
- **exploit_target**: The main orchestrator function that uses the reconnaissance data to systematically call other functions to test and exploit a wide range of web vulnerabilitie.

ftp_exploit.py 

- **run_metasploit_exploit**: To execute a specific Metasploit module (e.g., for a known FTP vulnerability) against the target to gain a shell.
- **test_ftp_anonymous_access**: To check if anonymous (no password) login is enabled on the FTP server and, if so, to list files to prove access.
- **test_ftp_brute_force**: To use Hydra to perform a brute-force attack against the FTP server, attempting to guess valid credentials from a wordlist.
- **test_ftp_vsftpd_backdoor**: To specifically test for and exploit the infamous vsftpd 2.3.4 backdoor, which provides a root shell if successful.
- **exploit_target**: The main orchestrator function that uses recon data to launch a series of FTP-specific attacks, such as testing for anonymous access, brute-forcing credentials, and exploiting known backdoors.

ssh_exploit.py 

- **test_ssh_brute_force**: To use Hydra to perform a brute-force attack against the SSH service to find valid user credentials.
- **test_ssh_default_credentials**: To check for common default SSH credentials (e.g., `root:root`, `admin:admin`).
- **test_ssh_keys**: To check for weak or publicly known SSH keys that could allow for unauthorized access.
- **exploit_target**: The main orchestrator that launches a series of attacks against the SSH service, prioritizing default credential checks, key-based attacks, and brute-force.


smb_exploit.py 

- **test_smb_anonymous_shares**: To use `smbclient` to check for and list the contents of SMB shares that can be accessed without a password.
- **test_smb_brute_force**: To use Hydra to perform a brute-force attack against the SMB service to find valid user credentials.
- **run_metasploit_smb_exploit**: To launch specific Metasploit modules that target known SMB vulnerabilities, such as EternalBlue (MS17-010).
- **exploit_target**: The main orchestrator that uses recon data to test for anonymous shares, brute-force credentials, and launch high-impact Metasploit exploits against the SMB service.

telnet_exploit.py 

- **test_telnet_brute_force**: To use Hydra to perform a brute-force attack against the Telnet service to find valid user credentials.
- **exploit_target**: The main function that orchestrates the brute-force attack against the Telnet service.

nfs_exploit.py 

- **test_nfs_shares**: To use `showmount -e` to list the network shares being exported by the NFS server.
- **test_nfs_mount**: To attempt to mount a discovered NFS share to the local filesystem, allowing for direct file access.
- **exploit_target**: The main orchestrator that discovers NFS shares and attempts to mount them to access the remote file system.

vnc_exploit.py 

- **test_vnc_brute_force**: To use Hydra to perform a brute-force attack against the VNC service to find a valid password.
- **exploit_target**: The main function that orchestrates the brute-force attack against the VNC service.

mysql_exploit.py 

- **test_mysql_brute_force**: To use Hydra to perform a brute-force attack against the MySQL database server to find valid credentials.
- **exploit_target**: The main orchestrator for the MySQL brute-force attack.

postgresql_exploit.py 

- **test_postgresql_brute_force**: To use Hydra to perform a brute-force attack against the PostgreSQL database server to find valid credentials.
- **exploit_target**: The main orchestrator for the PostgreSQL brute-force attack.

smtp_exploit.py 

- **test_smtp_open_relay**: To check if the SMTP server is an open relay, which would allow for sending emails to any recipient.
- **test_smtp_user_enum**: To perform user enumeration using the `VRFY` and `EXPN` SMTP commands.
- **exploit_target**: The main orchestrator for testing for open relay and performing user enumeration against the SMTP service.

dns_exploit.py 

- **test_dns_zone_transfer**: To attempt a DNS zone transfer, which can reveal a complete list of all DNS records for a domain.
- **exploit_target**: The main function that orchestrates the zone transfer attempt.

irc_exploit.py / java_rmi_exploit.py

- **exploit_target**: These scripts are primarily placeholders that launch Metasploit modules for their respective services, as these services often have complex, version-specific vulnerabilities.