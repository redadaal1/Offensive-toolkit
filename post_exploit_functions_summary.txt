http_post_exploit.py 

- **use_rce_for_enumeration**: To leverage a previously discovered Remote Code Execution (RCE) vulnerability to run a series of system enumeration commands (`id`, `whoami`, `ps aux`, etc.) to gather intelligence about the compromised machine.
- **targeted_lfi_download**: To use a confirmed Local File Inclusion (LFI) vulnerability to systematically download a list of sensitive system files, such as `/etc/passwd` and `/etc/shadow`.
- **sqlmap_extract_from_exploit**: To use a confirmed SQL injection vulnerability to run `sqlmap` with the objective of enumerating databases and dumping their contents.
- **exploit_admin_panels**: To attempt to log in to discovered web admin panels using a list of common default credentials to escalate privileges.
- **exploit_upload_vulnerabilities**: To use a confirmed file upload vulnerability to try and upload a web shell or a reverse shell, aiming for a more stable and interactive command execution.
- **post_exploit_target**: The main orchestrator that intelligently selects which post-exploitation actions to take based on the type of web vulnerability that was successfully exploited (RCE, LFI, SQLi, etc.).

ssh_post_exploit.py 

- **execute_remote_command**: A helper function to execute a single command on the target machine via SSH using `sshpass` for non-interactive authentication.
- **download_sensitive_files**: To use the established SSH session to download a list of high-value sensitive files (`/etc/passwd`, `/etc/shadow`, `.bash_history`, etc.) to the local `loot` directory.
- **gather_system_information**: To execute a series of system enumeration commands (`uname -a`, `ps aux`, `netstat -tulnp`, etc.) over the SSH session to get a comprehensive overview of the compromised system.
- **post_exploit_via_ssh**: The main orchestrator that uses credentials obtained during the exploit phase to run the system information gathering and sensitive file download functions.

ftp_post_exploit.py 

- **download_files_via_ftp**: To connect to the FTP server with compromised credentials and attempt to download all files and directories recursively.
- **upload_file_via_ftp**: To test if the compromised user has write permissions by attempting to upload a file to the FTP server.
- **post_exploit_via_ftp**: The main orchestrator that uses the credentials found during the exploit phase to perform file downloads and test for upload permissions.

telnet_post_exploit.py 

- **gather_system_information**: Similar to the SSH module, this function executes a series of enumeration commands over the compromised Telnet session to gather system intelligence.
- **post_exploit_via_telnet**: The main orchestrator that uses the credentials found during the exploit phase to run system information gathering commands.

smb_post_exploit.py 

- **psexec_shell**: To use the `psexec.py` Impacket script with compromised credentials to gain a command shell on the target system.
- **smb_download_files**: To use `smbclient` with compromised credentials to connect to a share and download files.
- **post_exploit_via_smb**: The main orchestrator that attempts to get a shell via PsExec and download files from accessible shares.

vnc_post_exploit.py 

- **capture_vnc_screenshot**: To use the `vncsnapshot` tool with the compromised password to take a screenshot of the remote desktop.
- **post_exploit_via_vnc**: The main orchestrator that attempts to capture a screenshot to prove the validity of the compromised VNC password.

mysql_post_exploit.py 

- **mysql_execute_query**: To connect to the MySQL server with compromised credentials and execute SQL queries, such as listing users, databases, and table contents.
- **post_exploit_via_mysql**: The main orchestrator that uses compromised credentials to dump user information and database schemas.

dns_post_exploit.py

- **post_exploit_via_dns**: This function primarily serves to document the findings from the exploit phase (like a successful zone transfer) and does not typically involve further interactive post-exploitation on the DNS service itself. It collates the discovered DNS records for reporting.